{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\User\\\\LoginComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../redux/User/userActions';\nimport mainlogo from '../../public_img/logo.jpg';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\n\nconst LoginComponent = () => {\n  _s();\n\n  const [userInfo, setUserInfo] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleOnChange = e => {\n    e.persist();\n    setUserInfo(() => ({\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"rgb(25,41,64)\",\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: mainlogo,\n          circular: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), \" \\u0412\\u0445\\u0456\\u0434 \\u0443 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"user\",\n            iconPosition: \"left\",\n            value: userInfo.username,\n            onChange: handleOnChange,\n            placeholder: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"lock\",\n            iconPosition: \"left\",\n            placeholder: \"Password\",\n            value: userInfo.password,\n            onChange: handleOnChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            size: \"large\",\n            type: \"submit\",\n            value: \"\\u0412\\u0456\\u0439\\u0442\\u0438\",\n            children: \" \\u0412\\u0456\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"New to us? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginComponent, \"BDxZb03b+/hSumJFkyhmATN8XJw=\");\n\n_c = LoginComponent;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUser: userInfo => dispatch(fetchUser(userInfo))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LoginComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/User/LoginComponent.js"],"names":["React","useEffect","useState","connect","fetchUser","mainlogo","Button","Form","Grid","Header","Image","Message","Segment","LoginComponent","userInfo","setUserInfo","username","password","handleOnChange","e","persist","target","name","value","height","maxWidth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {  useEffect , useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchUser} from '../../redux/User/userActions'\r\nimport mainlogo from '../../public_img/logo.jpg'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nconst LoginComponent =() => {\r\n    \r\n    const [userInfo, setUserInfo] = useState({\r\n        username:\"\",\r\n        password:\"\"\r\n    });\r\n    const handleOnChange = (e) => {\r\n        e.persist();\r\n        setUserInfo(() => ({\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    }\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' color='rgb(25,41,64)' textAlign='center'>\r\n            <Image src={mainlogo} circular/> Вхід у аккаунт\r\n            </Header>\r\n            \r\n                <Form size='large'>\r\n                    <Segment stacked>\r\n                        <Form.Input fluid icon='user' iconPosition='left' value={userInfo.username}\r\n                                onChange={handleOnChange} placeholder='E-mail' />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            value={userInfo.password}\r\n                            onChange={handleOnChange}\r\n                            type='password'\r\n                        />\r\n                        <Button color='black' size='large'type=\"submit\"  value=\"Війти\"> Війти</Button>\r\n                    </Segment>\r\n                </Form>\r\n                <Message>\r\n                    New to us? <a href='#'>Sign Up</a>\r\n                </Message>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchUser: (userInfo) => dispatch(fetchUser(userInfo))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginComponent)"]},"metadata":{},"sourceType":"module"}