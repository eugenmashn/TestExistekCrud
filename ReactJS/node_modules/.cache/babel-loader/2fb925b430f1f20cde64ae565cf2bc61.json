{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\User\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../../services/user_services';\nimport mainlogo from '../../public_img/logo.jpg';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react';\nimport { Redirect, withRouter } from 'react-router-dom';\n\nconst LoginComponent = props => {\n  _s();\n\n  debugger;\n  const [userInfo, setUserInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const handleOnChange = e => {\n    debugger;\n    e.persist();\n    setUserInfo(prefState => ({ ...prefState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  var authed = props.user.loggedIn;\n\n  if (authed) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/usersPosts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  }\n\n  let visibleMessage = true;\n  debugger;\n\n  if (props.user.errorMessage) {\n    visibleMessage = false;\n  }\n\n  const loginClick = e => {\n    debugger;\n    props.fetchUser(userInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '50vh'\n    },\n    verticalAlign: \"middle\",\n    children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n      style: {\n        maxWidth: 450\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        color: \"rgb(25,41,64)\",\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: mainlogo,\n          circular: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \\u0412\\u0445\\u0456\\u0434 \\u0443 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        size: \"large\",\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          stacked: true,\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"user\",\n            name: \"email\",\n            iconPosition: \"left\",\n            value: userInfo.email,\n            onChange: handleOnChange,\n            placeholder: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            fluid: true,\n            icon: \"lock\",\n            name: \"password\",\n            iconPosition: \"left\",\n            placeholder: \"Password\",\n            value: userInfo.password,\n            onChange: handleOnChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"black\",\n            onClick: loginClick,\n            size: \"large\",\n            type: \"submit\",\n            value: \"\\u0412\\u0456\\u0439\\u0442\\u0438\",\n            children: \" \\u0412\\u0456\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"\\u041D\\u0435 \\u043C\\u0430\\u0454 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/SignUp\",\n          children: \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        negative: true,\n        hidden: visibleMessage,\n        children: props.user.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginComponent, \"pUYu1mfKSaEMEEJncpaYcfVQB2k=\");\n\n_c = LoginComponent;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUser: userInfo => dispatch(fetchUser(userInfo))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginComponent));\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/User/Login.js"],"names":["React","useEffect","useState","connect","fetchUser","mainlogo","Button","Form","Grid","Header","Image","Message","Segment","Redirect","withRouter","LoginComponent","props","userInfo","setUserInfo","email","password","handleOnChange","e","persist","prefState","target","name","value","authed","user","loggedIn","visibleMessage","errorMessage","loginClick","height","maxWidth","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {  useEffect , useState} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {fetchUser} from '../../services/user_services'\r\nimport mainlogo from '../../public_img/logo.jpg'\r\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nconst LoginComponent =(props) => {\r\n    debugger;\r\n   \r\n    const [userInfo, setUserInfo] = useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    });\r\n    const handleOnChange = (e) => {\r\n        debugger;\r\n        e.persist();\r\n        setUserInfo((prefState) => ({\r\n            ...prefState,\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    } \r\n    var authed = props.user.loggedIn;\r\n    if(authed)\r\n    {\r\n        return (<Redirect to='/usersPosts'/>);\r\n    }\r\n    let visibleMessage = true;\r\n    debugger;\r\n    if(props.user.errorMessage)\r\n    {\r\n        visibleMessage = false;\r\n    }\r\n    \r\n    const loginClick=(e) =>{\r\n        debugger;\r\n        props.fetchUser(userInfo);\r\n    }\r\n    return (\r\n        <Grid textAlign='center' style={{ height: '50vh' }} verticalAlign='middle'>\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n            <Header as='h2' color='rgb(25,41,64)' textAlign='center'>\r\n            <Image src={mainlogo} circular/> Вхід у аккаунт\r\n            </Header>\r\n            \r\n                <Form size='large'>\r\n                    <Segment stacked>\r\n                        <Form.Input fluid icon='user' name='email' iconPosition='left' value={userInfo.email}\r\n                                onChange={handleOnChange} placeholder='E-mail' />\r\n                        <Form.Input\r\n                            fluid\r\n                            icon='lock'\r\n                            name='password'\r\n                            iconPosition='left'\r\n                            placeholder='Password'\r\n                            value={userInfo.password}\r\n                            onChange={handleOnChange}\r\n                            type='password'\r\n                        />\r\n                        <Button color='black' onClick={loginClick} size='large'type=\"submit\"  value=\"Війти\"> Війти</Button>\r\n                    </Segment>\r\n                </Form>\r\n                <Message >\r\n                    Не має аккаунта? <a href='/SignUp'>Реєстрація</a>\r\n                </Message>\r\n                \r\n                <Message negative hidden={visibleMessage}>{props.user.errorMessage}</Message>\r\n                \r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst  mapStateToProps=(state)=>{\r\n    return{\r\n        user:state.user,\r\n    }\r\n  };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchUser: (userInfo) => dispatch(fetchUser(userInfo))\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginComponent))"]},"metadata":{},"sourceType":"module"}