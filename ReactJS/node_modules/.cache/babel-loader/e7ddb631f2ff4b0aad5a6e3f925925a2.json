{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\TestExistekCrud\\\\ReactJS\\\\src\\\\components\\\\Posts\\\\UpdatePostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/Post/actionsPost';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport PostForm from './PostForm';\nimport { GetPost, EditPost } from '../../services/post_services';\n\nfunction UpdatePost(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  let id = props.match.params.id;\n  let post = props.posts.find(i => i._id === id);\n  useEffect(() => {\n    dispatch(GetPost(id));\n  });\n\n  const SubmitPostFormUpdate = function (modalPost) {\n    if (modalPost.Name !== '') {\n      dispatch(EditPost(modalPost));\n    } else {\n      console.log('error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostForm, {\n    Post: post,\n    SubmitPostForm: SubmitPostFormUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n\n_s(UpdatePost, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UpdatePost;\n\nlet mapDispatchToProps = dispatch => {\n  return {};\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts.posts\n  };\n};\n\nconst EditPostComp = connect(mapStateToProps, mapDispatchToProps)(UpdatePost);\nexport default EditPostComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePost\");","map":{"version":3,"sources":["D:/Source/TestExistekCrud/ReactJS/src/components/Posts/UpdatePostForm.js"],"names":["React","useEffect","new_Post","edit_Post","connect","useDispatch","PostForm","GetPost","EditPost","UpdatePost","props","dispatch","id","match","params","post","posts","find","i","_id","SubmitPostFormUpdate","modalPost","Name","console","log","mapDispatchToProps","mapStateToProps","state","EditPostComp"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,8BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,EAAiBC,QAAjB,QAAiC,8BAAjC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,EAAE,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AACA,MAAIG,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAYC,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAQP,EAA9B,CAAX;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACJ,OAAO,CAACK,EAAD,CAAR,CAAR;AACC,GAFM,CAAT;;AAGA,QAAMQ,oBAAoB,GAAG,UAASC,SAAT,EAAoB;AAC7C,QAAGA,SAAS,CAACC,IAAV,KAAmB,EAAtB,EAAyB;AACrBX,MAAAA,QAAQ,CAACH,QAAQ,CAACa,SAAD,CAAT,CAAR;AACH,KAFD,MAGI;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEF,GARH;;AASE,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAET,IAAhB;AAAsB,IAAA,cAAc,EAAIK;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GAjBQX,U;UACUJ,W;;;KADVI,U;;AAkBT,IAAIgB,kBAAkB,GAAEd,QAAD,IAAY;AAC/B,SAAO,EAAP;AAGH,CAJD;;AAMA,IAAIe,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAM;AACFX,IAAAA,KAAK,EAACW,KAAK,CAACX,KAAN,CAAYA;AADhB,GAAN;AAGD,CAJD;;AAWA,MAAMY,YAAY,GAAGxB,OAAO,CAACsB,eAAD,EAAiBD,kBAAjB,CAAP,CAA6ChB,UAA7C,CAArB;AACA,eAAemB,YAAf","sourcesContent":["  \r\nimport React, {  useEffect } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/Post/actionsPost'\r\nimport { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport PostForm from './PostForm'\r\nimport { GetPost,EditPost } from '../../services/post_services';\r\n\r\nfunction UpdatePost(props) {\r\n  const dispatch = useDispatch();\r\n  let id = props.match.params.id;\r\n  let post = props.posts.find(i => i._id===id); \r\n  useEffect(() => {\r\n    dispatch(GetPost(id));\r\n    });\r\n  const SubmitPostFormUpdate = function(modalPost) {\r\n      if(modalPost.Name !== ''){\r\n          dispatch(EditPost(modalPost))\r\n      }\r\n      else{\r\n          console.log('error');\r\n      }\r\n          \r\n    }\r\n    return <PostForm Post={post} SubmitPostForm = {SubmitPostFormUpdate}/>\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n      \r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return{\r\n      posts:state.posts.posts,\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst EditPostComp = connect(mapStateToProps,mapDispatchToProps) (UpdatePost);\r\nexport default EditPostComp;"]},"metadata":{},"sourceType":"module"}