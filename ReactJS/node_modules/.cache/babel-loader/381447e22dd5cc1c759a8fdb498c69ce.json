{"ast":null,"code":"import { SET_NOTES, DELETE_NOTE, NEW_NOTE, EDIT_NOTE, SET_LOADING } from './types';\nconst initialState = {\n  posts: [],\n  loading: false,\n  page: 1\n};\nexport default function postsReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NOTES:\n      return { ...state,\n        posts: [...action.payload]\n      };\n\n    case DELETE_NOTE:\n      return { ...state,\n        posts: [...state.notes.filter(post => post.id !== action.payload.value.id)]\n      };\n\n    case NEW_NOTE:\n      {\n        if (!state.posts.find(i => i._id === action.payload._id)) return { ...state,\n          posts: [...state.posts, action.payload]\n        };\n        return state;\n      }\n\n    case SET_LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case EDIT_NOTE:\n      let posts = state.posts.map(post => {\n        debugger;\n\n        if (post.id === action.payload._id) {\n          post = action.payload;\n        }\n\n        return post;\n      });\n      return { ...state,\n        posts: [...posts]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/redux/postReducer.js"],"names":["SET_NOTES","DELETE_NOTE","NEW_NOTE","EDIT_NOTE","SET_LOADING","initialState","posts","loading","page","postsReducer","state","action","type","payload","notes","filter","post","id","value","find","i","_id","map"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,WAAlB,EAA8BC,QAA9B,EAAuCC,SAAvC,EAAiDC,WAAjD,QAAmE,SAAnE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAC,KAFS;AAGjBC,EAAAA,IAAI,EAAC;AAHY,CAArB;AAKA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,SAAL;AACI,aAAO,EAAE,GAAGU,KAAL;AAAYJ,QAAAA,KAAK,EAAE,CAAC,GAAGK,MAAM,CAACE,OAAX;AAAnB,OAAP;;AACJ,SAAKZ,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AACOJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,IAAI,IACxCA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeK,KAAf,CAAqBD,EADhB,CAAJ;AADd,OAAP;;AAIJ,SAAKf,QAAL;AACI;AACI,YAAG,CAACQ,KAAK,CAACJ,KAAN,CAAYa,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUV,MAAM,CAACE,OAAP,CAAeQ,GAA/C,CAAJ,EACI,OAAO,EAAE,GAAGX,KAAL;AAAYJ,UAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBK,MAAM,CAACE,OAAxB;AAAnB,SAAP;AACJ,eAAOH,KAAP;AACH;;AAEL,SAAKN,WAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAUH,QAAAA,OAAO,EAACI,MAAM,CAACE;AAAzB,OAAP;;AACJ,SAAKV,SAAL;AACI,UAAIG,KAAK,GAAGI,KAAK,CAACJ,KAAN,CAAYgB,GAAZ,CAAgBN,IAAI,IAAI;AAChC;;AACA,YAAIA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACE,OAAP,CAAeQ,GAA/B,EAAoC;AAChCL,UAAAA,IAAI,GAAGL,MAAM,CAACE,OAAd;AACH;;AACD,eAAOG,IAAP;AACH,OANW,CAAZ;AAOA,aAAO,EAAE,GAAGN,KAAL;AAAYJ,QAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ;AAAnB,OAAP;;AACJ;AACI,aAAOI,KAAP;AA3BR;AA6BH","sourcesContent":["import {SET_NOTES,DELETE_NOTE,NEW_NOTE,EDIT_NOTE,SET_LOADING} from './types';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    loading:false,\r\n    page:1\r\n}\r\nexport default function postsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_NOTES:\r\n            return { ...state, posts: [...action.payload] };\r\n        case DELETE_NOTE:\r\n            return {\r\n                ...state, posts: [...state.notes.filter(post =>\r\n                    post.id !== action.payload.value.id)]\r\n            }\r\n        case NEW_NOTE:\r\n            {\r\n                if(!state.posts.find(i => i._id === action.payload._id))\r\n                    return { ...state, posts: [...state.posts, action.payload] }\r\n                return state;\r\n            }\r\n            \r\n        case SET_LOADING:\r\n            return {...state,loading:action.payload}\r\n        case EDIT_NOTE:\r\n            let posts = state.posts.map(post => {\r\n                debugger;\r\n                if (post.id === action.payload._id) {\r\n                    post = action.payload\r\n                }\r\n                return post;\r\n            })\r\n            return { ...state, posts: [...posts] }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}