{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\FormPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Posts.css';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\nconst FormPost = props => {\n  _s();\n\n  debugger;\n  const [modalPost, setModalPost] = useState({\n    _id: !props.Post ? '' : this.props.Post._id,\n    header: !props.Post ? '' : this.props.Post.header,\n    description: !props.Post ? '' : this.props.Post.description,\n    UrlImg: !props.Post ? '' : this.props.Post.UrlImg,\n    location: !props.Post ? '' : this.props.Post.location,\n    dateCreated: !props.Post ? '' : props.Post.dateCreated,\n    viewCount: 0,\n    tags: []\n  });\n\n  const inputGroupChangeHandler = event => {\n    setModalPost(prevState => ({ ...prevState,\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    size: \"huge\",\n    className: \"cr-up-form\",\n    onSubmit: event => {\n      console.log('submit');\n      event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: 2,\n      className: \"form-cr-up-post\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\",\n        type: \"text\",\n        id: \"header\",\n        width: 8,\n        name: \"header\",\n        value: !modalPost ? '' : modalPost.header,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u041C\\u0456\\u0441\\u0446\\u0435 \\u0437\\u043D\\u0430\\u0445\\u043E\\u0434\\u0436\\u0435\\u043D\\u043D\\u044F\",\n        type: \"text\",\n        id: \"location\",\n        width: 8,\n        name: \"location\",\n        value: !modalPost ? '' : modalPost.location,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u0421\\u0438\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n        type: \"text\",\n        id: \"UrlImg\",\n        width: 6,\n        name: \"UrlImg\",\n        value: !modalPost ? '' : modalPost.UrlImg,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        label: \"\\u041E\\u043F\\u0438\\u0441\",\n        type: \"text\",\n        id: \"description\",\n        width: 16,\n        name: \"description\",\n        value: !modalPost ? '' : modalPost.description,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-submit-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: \"/\",\n        type: \"submit\",\n        onClick: () => {\n          props.SubmitPostForm(modalPost);\n        },\n        variant: \"primary\",\n        children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormPost, \"HpcRavWD0HjSKO8zIfRFHa9yo7g=\");\n\n_c = FormPost;\nexport default FormPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/FormPost.js"],"names":["React","useState","useEffect","Button","Form","Link","FormPost","props","modalPost","setModalPost","_id","Post","header","description","UrlImg","location","dateCreated","viewCount","tags","inputGroupChangeHandler","event","prevState","target","id","value","console","log","preventDefault","SubmitPostForm"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState , useEffect } from 'react';\r\nimport './Posts.css';\r\nimport {\r\n  Button,\r\n\r\n  Form,\r\n\r\n} from 'semantic-ui-react'\r\n\r\nimport {Link}  from \"react-router-dom\";\r\n\r\n\r\n const FormPost  = (props)=>{\r\n   debugger;\r\n  const [modalPost, setModalPost] = useState({\r\n    _id: !props.Post?'':this.props.Post._id,\r\n    header: !props.Post?'':this.props.Post.header,\r\n    description: !props.Post?'':this.props.Post.description,\r\n    UrlImg:!props.Post?'':this.props.Post.UrlImg,\r\n    location:!props.Post?'':this.props.Post.location,\r\n    dateCreated:!props.Post?'': props.Post.dateCreated,\r\n    viewCount:0,\r\n    tags:[],\r\n  });\r\n  \r\n  const inputGroupChangeHandler = (event) => {\r\n  setModalPost((prevState) => ({\r\n  ...prevState,\r\n  [event.target.id]: event.target.value\r\n  }));\r\n  }\r\n  return (\r\n  <Form size='huge' className='cr-up-form' onSubmit={event => {\r\n    console.log('submit');\r\n    event.preventDefault();\r\n    }}>\r\n\r\n    <Form.Group  widths={2} className='form-cr-up-post'>\r\n      <Form.Input label='Назва'  type=\"text\" id='header' width={8}\r\n           name=\"header\"value={!modalPost ? '' : modalPost.header}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      <Form.Input label='Місце знаходження'  type=\"text\" id='location' width={8}\r\n        name=\"location\"value={!modalPost ? '' : modalPost.location}\r\n      onChange={event => inputGroupChangeHandler( event)}/>\r\n       </Form.Group>\r\n      <Form.Group>\r\n      <Form.Input  label='Силка на фото'  type=\"text\" id='UrlImg' width={6}\r\n           name=\"UrlImg\"value={!modalPost ? '' : modalPost.UrlImg}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      </Form.Group>\r\n      <Form.Group>\r\n      <Form.TextArea label='Опис'  type=\"text\" id='description' width={16}\r\n           name=\"description\" value={!modalPost ? '' : modalPost.description}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      \r\n    </Form.Group>\r\n      <div className = 'cr-up-submit-button'>\r\n        <Button as={Link} to=\"/\" type='submit' onClick={()=>{ props.SubmitPostForm(modalPost)}} variant=\"primary\"   >\r\n          Зберегти\r\n        </Button>\r\n      </div>\r\n    \r\n  </Form>\r\n    );\r\n};\r\nexport default FormPost;\r\n\r\n"]},"metadata":{},"sourceType":"module"}