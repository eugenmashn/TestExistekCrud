{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [modalPost, setModalPost] = useState({\n    Name: '',\n    Description: '',\n    UrlImg: ''\n  });\n\n  const inputGroupChangeHandler = event => {\n    console.log(event.target);\n    setModalPost(prevState => ({ ...prevState,\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"cr-up-form\",\n    onSubmit: event => {\n      event.preventDefault();\n      props.handleFormSubmit(modalPost);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Name\",\n        name: \"Name\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u041E\\u043F\\u0438\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Description\",\n        name: \"Description\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" \\u0421\\u0438\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"UrlImg\",\n        name: \"UrlImg\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-submit-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: \"/addPosts\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditPost, \"ep+2r9hNqJvPGJfaKeTkWyJwrSE=\");\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nEditPost.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nconst CreateEditPost = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default CreateEditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/EditPost.js"],"names":["React","useState","new_Post","edit_Post","connect","PropTypes","Form","Button","InputGroup","FormControl","Link","EditPost","props","modalPost","setModalPost","Name","Description","UrlImg","inputGroupChangeHandler","event","console","log","target","prevState","id","value","preventDefault","handleFormSubmit","mapDispatchToProps","dispatch","addNewPost","newPost","updatePost","post","mapStateToProps","state","posts","propTypes","editMode","bool","object","CreateEditPost"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, InputGroup, FormControl  } from \"react-bootstrap\";\r\nimport {Link}  from \"react-router-dom\";\r\n\r\nfunction EditPost(props) {\r\n  const [modalPost, setModalPost] = useState({\r\n                                    Name:'',\r\n                                    Description:'',\r\n                                    UrlImg:''\r\n                                  });\r\n  const inputGroupChangeHandler = (event) => {\r\n    console.log(event.target);\r\n        setModalPost((prevState) => ({\r\n        ...prevState,\r\n        [event.target.id]: event.target.value\r\n    }));\r\n}\r\n  return (\r\n   \r\n      <form className='cr-up-form' onSubmit={event => {\r\n            event.preventDefault();\r\n            props.handleFormSubmit(modalPost);\r\n        }}>\r\n        \r\n        <div className='cr-up-input'> \r\n          <label >Назва </label>\r\n          <input type=\"text\" id='Name' name=\"Name\"value={modalPost === null ? '' : modalPost.value}\r\n            onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n        </div>\r\n        \r\n        <div className='cr-up-input'> \r\n          <label>Опис</label>\r\n          <input type=\"text\" id='Description' name=\"Description\"value={modalPost === null ? '' : modalPost.value}\r\n            onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n          \r\n        </div>\r\n        <div className='cr-up-input'> \r\n          <label> Силка на фото</label>\r\n          <input type=\"text\" id='UrlImg' name=\"UrlImg\"value={modalPost === null ? '' : modalPost.value}\r\n            onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n          \r\n        </div>  \r\n        <div className = 'cr-up-submit-button'>\r\n          <Button as={Link} to=\"/addPosts\" type='submit' variant=\"primary\"   >\r\n                Зберегти\r\n          </Button>\r\n        </div>\r\n      </form>\r\n  \r\n  );\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n      addNewPost:(newPost)=>{\r\n        \r\n          dispatch(new_Post(newPost))\r\n        },\r\n      updatePost:(post)=>{\r\n        dispatch(edit_Post(post))\r\n      },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n\r\n  return{\r\n      posts:state.posts,\r\n\r\n\r\n  }\r\n};\r\n\r\nEditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n}\r\nconst CreateEditPost = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default CreateEditPost;\r\n"]},"metadata":{},"sourceType":"module"}