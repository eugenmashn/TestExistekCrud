{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [modalPost, setModalPost] = useState({\n    Name: '',\n    Description: '',\n    UrlImg: ''\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cr-up-post\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => {\n        event.preventDefault();\n        props.handleFormSubmit(modalPost);\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          value: modalPost === null ? '' : modalPost.value,\n          onChange: event => setModalPost({ ...modalPost,\n            value: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: \"/addPosts\",\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"ep+2r9hNqJvPGJfaKeTkWyJwrSE=\");\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nEditPost.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nconst CreateEditPost = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default CreateEditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/EditPost.js"],"names":["React","useState","new_Post","edit_Post","connect","PropTypes","Form","Button","InputGroup","FormControl","Link","EditPost","props","modalPost","setModalPost","Name","Description","UrlImg","event","preventDefault","handleFormSubmit","value","target","mapDispatchToProps","dispatch","addNewPost","newPost","updatePost","post","mapStateToProps","state","posts","propTypes","editMode","bool","object","CreateEditPost"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAuD,iBAAvD;AACA,SAAQC,IAAR,QAAoB,kBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC;AACTc,IAAAA,IAAI,EAAC,EADI;AAETC,IAAAA,WAAW,EAAC,EAFH;AAGTC,IAAAA,MAAM,EAAC;AAHE,GAAD,CAA1C;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACM,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,KAAK,IAAI;AACnBA,QAAAA,KAAK,CAACC,cAAN;AACAP,QAAAA,KAAK,CAACQ,gBAAN,CAAuBP,SAAvB;AACH,OAHH;AAAA,8BAII,QAAC,UAAD;AAAA,+BACM,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEA,SAAS,KAAK,IAAd,GAAqB,EAArB,GAA0BA,SAAS,CAACQ,KAAxD;AACI,UAAA,QAAQ,EAAEH,KAAK,IAAIJ,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgBQ,YAAAA,KAAK,EAAEH,KAAK,CAACI,MAAN,CAAaD;AAApC,WAAD;AADnC;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEX,IAAZ;AAAkB,QAAA,EAAE,EAAC,WAArB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,OAAO,EAAC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvBQC,Q;;KAAAA,Q;;AAwBT,IAAIY,kBAAkB,GAAEC,QAAD,IAAY;AACjC,SAAO;AACHC,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAClBF,MAAAA,QAAQ,CAACtB,QAAQ,CAACwB,OAAD,CAAT,CAAR;AACD,KAHA;AAIHC,IAAAA,UAAU,EAAEC,IAAD,IAAQ;AACjBJ,MAAAA,QAAQ,CAACrB,SAAS,CAACyB,IAAD,CAAV,CAAR;AACD;AANE,GAAP;AAQD,CATD;;AAWA,IAAIC,eAAe,GAAEC,KAAD,IAAS;AAE3B,SAAM;AACFC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADV,GAAN;AAKD,CAPD;;AASApB,QAAQ,CAACqB,SAAT,GAAqB;AACnBC,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,IADD;AAEnBN,EAAAA,IAAI,EAAEvB,SAAS,CAAC8B;AAFG,CAArB;AAIA,MAAMC,cAAc,GAAGhC,OAAO,CAACyB,eAAD,EAAiBN,kBAAjB,CAAP,CAA6CZ,QAA7C,CAAvB;AACA,eAAeyB,cAAf","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, InputGroup, FormControl  } from \"react-bootstrap\";\r\nimport {Link}  from \"react-router-dom\";\r\n\r\nfunction EditPost(props) {\r\n  const [modalPost, setModalPost] = useState({\r\n                                    Name:'',\r\n                                    Description:'',\r\n                                    UrlImg:''\r\n                                  });\r\n  return (\r\n    <div className=\"cr-up-post\">\r\n          <Form onSubmit={event => {\r\n                event.preventDefault();\r\n                props.handleFormSubmit(modalPost);\r\n            }}>    \r\n              <InputGroup>\r\n                    <FormControl value={modalPost === null ? '' : modalPost.value}\r\n                        onChange={event => setModalPost({ ...modalPost, value: event.target.value })} />\r\n              </InputGroup>\r\n\r\n              <Button as={Link} to=\"/addPosts\" type='submit' variant=\"primary\"   >\r\n                    Save\r\n              </Button>\r\n          </Form>\r\n    </div>\r\n  );\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n      addNewPost:(newPost)=>{\r\n          dispatch(new_Post(newPost))\r\n        },\r\n      updatePost:(post)=>{\r\n        dispatch(edit_Post(post))\r\n      },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n\r\n  return{\r\n      posts:state.posts,\r\n\r\n\r\n  }\r\n};\r\n\r\nEditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n}\r\nconst CreateEditPost = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default CreateEditPost;\r\n"]},"metadata":{},"sourceType":"module"}