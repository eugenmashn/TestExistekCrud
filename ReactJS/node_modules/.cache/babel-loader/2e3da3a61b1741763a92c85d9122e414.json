{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\TestExistekCrud\\\\ReactJS\\\\src\\\\components\\\\Posts\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Header, Divider, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport 'moment/locale/ru';\nimport { GetPost, DeletePost } from '../../services/post_services';\n\nconst ViewPost = function (props) {\n  _s();\n\n  debugger;\n  const dispatch = useDispatch();\n  let showButton = false;\n  let post = props.post.find(i => i._id === props.id);\n  useEffect(() => {\n    if (!post) {\n      dispatch(GetPost(props.id));\n    }\n  }, []);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  const removePost = () => {\n    dispatch(DeletePost(post));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-post\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"devider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041E\\u043F\\u0438\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showButton ? 'button-view-post' : 'hidden',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: \"/\",\n          secondary: true,\n          className: \"button-change-post\",\n          onClick: removePost,\n          children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          hide: !showButton,\n          as: Link,\n          to: `/changePost/${props.id}`,\n          secondary: true,\n          className: \"button-change-post\",\n          children: \"\\u0417\\u043C\\u0456\\u043D\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-post-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: post.location + \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Moment, {\n          date: post.dateCreated,\n          format: \"MMM Do YY\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/usersPosts/${post.author}`,\n          children: post.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ViewPost;\n\nlet mapStateToProps = (state, ownProps) => {\n  debugger;\n  return {\n    id: ownProps.match.params.id,\n    user: state.user,\n    post: state.posts.posts\n  };\n};\n\nViewPost.propTypes = {\n  post: PropTypes.object\n};\nconst viewPost = connect(mapStateToProps, null)(ViewPost);\nexport default viewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["D:/Source/TestExistekCrud/ReactJS/src/components/Posts/ViewPost.js"],"names":["React","useEffect","PropTypes","connect","useSelector","useDispatch","Container","Header","Divider","Button","Link","Moment","GetPost","DeletePost","ViewPost","props","dispatch","showButton","post","find","i","_id","id","removePost","header","description","location","dateCreated","author","mapStateToProps","state","ownProps","match","params","user","posts","propTypes","object","viewPost"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Container, Header,Divider,Button } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment'\r\nimport  'moment/locale/ru';\r\nimport { GetPost,DeletePost } from '../../services/post_services';\r\n\r\n\r\nconst ViewPost = function (props) {\r\n    debugger;\r\n    const dispatch = useDispatch();\r\n    let showButton = false;\r\n   \r\n    let post = props.post.find(i => i._id === props.id);\r\n    \r\n\r\n    useEffect(() => {\r\n        if(!post) {\r\n            dispatch(GetPost(props.id));\r\n        }\r\n        },[]);\r\n    if(!post)\r\n    {\r\n      return<div>loading...</div>  \r\n    }\r\n    const removePost = () =>{\r\n        \r\n        dispatch(DeletePost(post));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"view-post\">\r\n            <Container fluid>\r\n                <Header as='h2'><span>{post.header}</span></Header>\r\n                <Divider className='devider'/>\r\n                <Header as='h2'><span>Опис</span></Header>\r\n                <p>{post.description}</p>\r\n                <div  className={showButton? 'button-view-post':'hidden'}>\r\n                \r\n                <Button  as={Link} to={\"/\"} secondary className = 'button-change-post' onClick={removePost}>Видалити</Button>\r\n                <Button hide={!showButton} as={Link} to={`/changePost/${props.id}`} secondary className = 'button-change-post'>Змінити</Button>\r\n                </div>\r\n                \r\n                <Divider />\r\n            <div className='footer-post-view'>\r\n                <span>{post.location +\" \"}</span>\r\n                <Moment  date ={post.dateCreated} format =\"MMM Do YY\"> </Moment>\r\n\r\n                <Link to = {`/usersPosts/${post.author}`}>{post.author}</Link>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nlet mapStateToProps=(state,ownProps)=>{\r\n    \r\n    debugger;\r\n    return{\r\n        id:ownProps.match.params.id,\r\n        user :state.user,\r\n        post:state.posts.posts\r\n    }\r\n  };\r\n  \r\n  ViewPost.propTypes = {\r\n    post: PropTypes.object\r\n  }\r\n  const viewPost = connect(mapStateToProps,null) (ViewPost);\r\n  export default viewPost;"]},"metadata":{},"sourceType":"module"}