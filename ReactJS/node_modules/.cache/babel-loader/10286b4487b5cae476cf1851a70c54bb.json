{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Header, Divider, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport 'moment/locale/ru';\nimport { GetPost } from '../../services/post_services';\n\nconst ViewPost = function (props) {\n  _s();\n\n  console.log(props);\n\n  if (!props.post) {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      GetPost(dispatch);\n    }, []);\n  }\n\n  const posts = useSelector(state => state.posts.posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-post\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.post.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"devider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u041E\\u043F\\u0438\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-view-post\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: \"/changePost\",\n          secondary: true,\n          className: \"button-change-post\",\n          children: \"\\u0417\\u043C\\u0456\\u043D\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-post-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: props.post.location + \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Moment, {\n          date: props.post.dateCreated,\n          format: \"MMM Do YY\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"o4US3WdqUjMzfyMMsIJbVLliVmM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ViewPost;\n\nlet mapStateToProps = (state, ownProps) => {\n  debugger;\n  console.log(ownProps);\n\n  if (!state.post.posts[state.posts.posts[ownProps.match.params.id - 1]]) {}\n\n  return {\n    post: state.posts.posts[ownProps.match.params.id - 1]\n  };\n};\n\nViewPost.propTypes = {\n  post: PropTypes.object\n};\nconst viewPost = connect(mapStateToProps, null)(ViewPost);\nexport default viewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/ViewPost.js"],"names":["React","PropTypes","connect","useSelector","useDispatch","Container","Header","Divider","Button","Link","Moment","GetPost","ViewPost","props","console","log","post","dispatch","useEffect","posts","state","header","description","location","dateCreated","mapStateToProps","ownProps","match","params","id","propTypes","object","viewPost"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Container, Header,Divider,Button } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment'\r\nimport  'moment/locale/ru';\r\nimport { GetPost } from '../../services/post_services';\r\n\r\n\r\nconst ViewPost = function (props) {\r\n\r\n    console.log(props);\r\n    if(!props.post){\r\n        const dispatch = useDispatch();\r\n    \r\n        useEffect(() => {\r\n            GetPost(dispatch);\r\n            }, []);\r\n    }\r\n\r\n    const posts = useSelector(state => state.posts.posts);\r\n   \r\n    return (\r\n        <div className=\"view-post\">\r\n            <Container fluid>\r\n                <Header as='h2'><span>{props.post.header}</span></Header>\r\n                <Divider className='devider'/>\r\n                <Header as='h2'><span>Опис</span></Header>\r\n                <p>{props.post.description}</p>\r\n                <div className='button-view-post'>\r\n                <Button  as={Link} to=\"/changePost\" secondary className = 'button-change-post'>Змінити</Button>\r\n                </div>\r\n                \r\n                <Divider />\r\n            <div className='footer-post-view'>\r\n                <span>{props.post.location +\" \"}</span>\r\n                <Moment  date ={props.post.dateCreated} format =\"MMM Do YY\"> </Moment>\r\n            </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nlet mapStateToProps=(state,ownProps)=>{\r\n    debugger;\r\n    console.log(ownProps);\r\n    if(! state.post.posts[state.posts.posts[ownProps.match.params.id-1]])\r\n    {\r\n        \r\n    }\r\n    return{\r\n        post:state.posts.posts[ownProps.match.params.id-1],\r\n    }\r\n  };\r\n  \r\n  ViewPost.propTypes = {\r\n    post: PropTypes.object\r\n  }\r\n  const viewPost = connect(mapStateToProps,null) (ViewPost);\r\n  export default viewPost;"]},"metadata":{},"sourceType":"module"}