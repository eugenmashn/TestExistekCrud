{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\CreatePostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FormPost from './Posts';\n\nfunction CreatePost(props) {\n  _s();\n\n  const [modalPost, setModalPost] = useState({\n    _id: '',\n    header: '',\n    description: '',\n    UrlImg: '',\n    location: '',\n    dateCreated: '',\n    viewCount: 0,\n    tags: []\n  });\n\n  const SubmitPostFormCreate = () => {\n    modalPost.id = 10;\n\n    if (modalPost.Name !== '') {\n      debugger;\n      props.addNewPost(modalPost);\n    } else {\n      console.log('error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormPost, {\n    modalPost: modalPost,\n    setModalPost: setModalPost,\n    SubmitPostForm: SubmitPostFormCreate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CreatePost, \"KtDeN20hWXzFMuJjr/X0O9npQkk=\");\n\n_c = CreatePost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nCreatePost.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nconst CreatePostComp = connect(mapStateToProps, mapDispatchToProps)(CreatePost);\nexport default CreatePostComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/CreatePostForm.js"],"names":["React","useState","useEffect","new_Post","edit_Post","connect","PropTypes","FormPost","CreatePost","props","modalPost","setModalPost","_id","header","description","UrlImg","location","dateCreated","viewCount","tags","SubmitPostFormCreate","id","Name","addNewPost","console","log","mapDispatchToProps","dispatch","newPost","updatePost","post","mapStateToProps","state","posts","propTypes","editMode","bool","object","CreatePostComp"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,SAArB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EACA;AAAA;;AAEE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACTW,IAAAA,GAAG,EAAC,EADK;AAETC,IAAAA,MAAM,EAAC,EAFE;AAGTC,IAAAA,WAAW,EAAC,EAHH;AAITC,IAAAA,MAAM,EAAC,EAJE;AAKTC,IAAAA,QAAQ,EAAC,EALA;AAMTC,IAAAA,WAAW,EAAC,EANH;AAOTC,IAAAA,SAAS,EAAC,CAPD;AAQTC,IAAAA,IAAI,EAAC;AARI,GAAD,CAA1C;;AAUA,QAAOC,oBAAoB,GAAG,MAAK;AAEjCV,IAAAA,SAAS,CAACW,EAAV,GAAa,EAAb;;AACA,QAAGX,SAAS,CAACY,IAAV,KAAmB,EAAtB,EAAyB;AACvB;AACAb,MAAAA,KAAK,CAACc,UAAN,CAAiBb,SAAjB;AACD,KAHD,MAII;AACFc,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAGF,GAZD;;AAaA,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAEf,SAArB;AAAgC,IAAA,YAAY,EAAEC,YAA9C;AAA4D,IAAA,cAAc,EAAIS;AAA9E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA3BQZ,U;;KAAAA,U;;AA4BP,IAAIkB,kBAAkB,GAAEC,QAAD,IAAY;AACjC,SAAO;AACHJ,IAAAA,UAAU,EAAEK,OAAD,IAAW;AAElBD,MAAAA,QAAQ,CAACxB,QAAQ,CAACyB,OAAD,CAAT,CAAR;AACD,KAJA;AAKHC,IAAAA,UAAU,EAAEC,IAAD,IAAQ;AACjBH,MAAAA,QAAQ,CAACvB,SAAS,CAAC0B,IAAD,CAAV,CAAR;AACD;AAPE,GAAP;AASH,CAVC;;AAYF,IAAIC,eAAe,GAAEC,KAAD,IAAS;AACzB,SAAM;AACFC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADV,GAAN;AAGH,CAJD;;AAMAzB,UAAU,CAAC0B,SAAX,GAAuB;AACvBC,EAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,IADG;AAEvBN,EAAAA,IAAI,EAAExB,SAAS,CAAC+B;AAFO,CAAvB;AASA,MAAMC,cAAc,GAAGjC,OAAO,CAAC0B,eAAD,EAAiBL,kBAAjB,CAAP,CAA6ClB,UAA7C,CAAvB;AACA,eAAe8B,cAAf","sourcesContent":["\r\nimport React, { useState , useEffect } from 'react';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport FormPost from './Posts'\r\n\r\n\r\nfunction CreatePost(props)\r\n{\r\n      \r\n  const [modalPost, setModalPost] = useState({\r\n                                    _id:'',\r\n                                    header:'',\r\n                                    description:'',\r\n                                    UrlImg:'',\r\n                                    location:'',\r\n                                    dateCreated:'',\r\n                                    viewCount:0,\r\n                                    tags:[],\r\n                                  });\r\n  const  SubmitPostFormCreate = ()=> {\r\n    \r\n    modalPost.id=10;\r\n    if(modalPost.Name !== ''){\r\n      debugger;\r\n      props.addNewPost(modalPost);\r\n    }\r\n    else{\r\n      console.log('error');\r\n    }\r\n       \r\n\r\n  }\r\n  return <FormPost modalPost={modalPost} setModalPost={setModalPost} SubmitPostForm = {SubmitPostFormCreate}/>\r\n}\r\n  let mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addNewPost:(newPost)=>{\r\n          \r\n            dispatch(new_Post(newPost))\r\n          },\r\n        updatePost:(post)=>{\r\n          dispatch(edit_Post(post))\r\n        },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        posts:state.posts,\r\n    }\r\n};\r\n\r\nCreatePost.propTypes = {\r\neditMode: PropTypes.bool,\r\npost: PropTypes.object\r\n};\r\n\r\n\r\n\r\n\r\n\r\nconst CreatePostComp = connect(mapStateToProps,mapDispatchToProps) (CreatePost);\r\nexport default CreatePostComp;"]},"metadata":{},"sourceType":"module"}