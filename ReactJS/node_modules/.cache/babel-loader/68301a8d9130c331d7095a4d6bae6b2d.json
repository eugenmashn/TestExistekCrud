{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\UpdatePostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormPost from './FormPost';\nimport { GetPost } from '../../services/post_services';\n\nfunction EditPost(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  let post = props.post;\n  let id = props.match.params.id;\n  useEffect(() => {\n    dispatch(GetPost(props.id));\n  });\n\n  const SubmitPostFormUpdate = function (modalPost) {\n    debugger;\n\n    if (modalPost.Name !== '') {\n      props.updatePost(modalPost);\n    } else {\n      console.log('error');\n    }\n  };\n\n  debugger;\n  post = useSelector(state => state.posts.posts.find(i => i._id === id));\n  return /*#__PURE__*/_jsxDEV(FormPost, {\n    Post: post,\n    SubmitPostForm: SubmitPostFormUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EditPost, \"7K48bEdCs9ExWEWnKCoZI8Lr3a4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\n{\n  /*\r\n  EditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n  };*/\n}\nconst EditPostComp = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default EditPostComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/UpdatePostForm.js"],"names":["React","useEffect","new_Post","edit_Post","connect","useSelector","useDispatch","FormPost","GetPost","EditPost","props","dispatch","post","id","match","params","SubmitPostFormUpdate","modalPost","Name","updatePost","console","log","state","posts","find","i","_id","mapDispatchToProps","addNewPost","newPost","mapStateToProps","EditPostComp"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAIM,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,MAAIC,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACH,OAAO,CAACE,KAAK,CAACG,EAAP,CAAR,CAAR;AACC,GAFM,CAAT;;AAKA,QAAMG,oBAAoB,GAAG,UAASC,SAAT,EAAoB;AAG/C;;AACA,QAAGA,SAAS,CAACC,IAAV,KAAmB,EAAtB,EAAyB;AACrBR,MAAAA,KAAK,CAACS,UAAN,CAAiBF,SAAjB;AACH,KAFD,MAGI;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AAEA,GAXH;;AAYE;AACAT,EAAAA,IAAI,GAACP,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUb,EAAtC,CAAV,CAAhB;AAIA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAED,IAAhB;AAAsB,IAAA,cAAc,EAAII;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GA7BQP,Q;UACUH,W,EAqBVD,W;;;KAtBAI,Q;;AA8BT,IAAIkB,kBAAkB,GAAEhB,QAAD,IAAY;AAC/B,SAAO;AACHiB,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAElBlB,MAAAA,QAAQ,CAACT,QAAQ,CAAC2B,OAAD,CAAT,CAAR;AACD,KAJA;AAKHV,IAAAA,UAAU,EAAEP,IAAD,IAAQ;AACjBD,MAAAA,QAAQ,CAACR,SAAS,CAACS,IAAD,CAAV,CAAR;AACD;AAPE,GAAP;AASH,CAVD;;AAYA,IAAIkB,eAAe,GAAER,KAAD,IAAS;AAC7B,SAAM;AACFC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADV,GAAN;AAGC,CAJD;;AAOA;AAAC;AACD;AACA;AACA;AACA;AAAK;AAIL,MAAMQ,YAAY,GAAG3B,OAAO,CAAC0B,eAAD,EAAiBH,kBAAjB,CAAP,CAA6ClB,QAA7C,CAArB;AACA,eAAesB,YAAf","sourcesContent":["  \r\nimport React, {  useEffect } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormPost from './FormPost'\r\nimport { GetPost } from '../../services/post_services';\r\n\r\nfunction EditPost(props) {\r\n  const dispatch = useDispatch();\r\n  let post = props.post; \r\n  let id = props.match.params.id;\r\n  useEffect(() => {\r\n    dispatch(GetPost(props.id));\r\n    });\r\n        \r\n \r\n  const SubmitPostFormUpdate = function(modalPost) {\r\n    \r\n    \r\n    debugger;\r\n    if(modalPost.Name !== ''){\r\n        props.updatePost(modalPost);\r\n    }\r\n    else{\r\n        console.log('error');\r\n    }\r\n        \r\n    }\r\n    debugger;\r\n    post=useSelector(state => state.posts.posts.find(i => i._id === id));\r\n    \r\n    \r\n   \r\n    return <FormPost Post={post} SubmitPostForm = {SubmitPostFormUpdate}/>\r\n  \r\n  \r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addNewPost:(newPost)=>{\r\n          \r\n            dispatch(new_Post(newPost))\r\n          },\r\n        updatePost:(post)=>{\r\n          dispatch(edit_Post(post))\r\n        },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\nreturn{\r\n    posts:state.posts,\r\n}\r\n};\r\n\r\n\r\n{/*\r\nEditPost.propTypes = {\r\neditMode: PropTypes.bool,\r\npost: PropTypes.object\r\n};*/}\r\n\r\n\r\n\r\nconst EditPostComp = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default EditPostComp;"]},"metadata":{},"sourceType":"module"}