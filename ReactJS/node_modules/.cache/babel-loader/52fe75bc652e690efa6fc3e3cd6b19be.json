{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nfunction EditPost() {\n  _s();\n\n  const [modalPost, setModalPost] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cr-up-post\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => {\n        event.preventDefault();\n        handleFormSubmit(dispatch, modalNote);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            value: modalNote === null ? '' : modalNote.value,\n            onChange: event => setModalNote({ ...modalNote,\n              value: event.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"uzo4iKDmiyjGC1Iw30kub7pqVqM=\");\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nEditPost.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nconst CreateEditPost = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default CreateEditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/EditPost.js"],"names":["React","useState","new_Post","edit_Post","connect","PropTypes","Form","Button","InputGroup","FormControl","EditPost","modalPost","setModalPost","event","preventDefault","handleFormSubmit","dispatch","modalNote","value","setModalNote","target","handleClose","mapDispatchToProps","addNewPost","newPost","updatePost","post","mapStateToProps","state","posts","propTypes","editMode","bool","object","CreateEditPost"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,WAAnC,QAAuD,iBAAvD;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACM,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEY,KAAK,IAAI;AACnBA,QAAAA,KAAK,CAACC,cAAN;AACAC,QAAAA,gBAAgB,CAACC,QAAD,EAAWC,SAAX,CAAhB;AACH,OAHH;AAAA,8BAIE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACM,QAAC,UAAD;AAAA,iCACM,QAAC,WAAD;AAAa,YAAA,KAAK,EAAEA,SAAS,KAAK,IAAd,GAAqB,EAArB,GAA0BA,SAAS,CAACC,KAAxD;AACI,YAAA,QAAQ,EAAEL,KAAK,IAAIM,YAAY,CAAC,EAAE,GAAGF,SAAL;AAAgBC,cAAAA,KAAK,EAAEL,KAAK,CAACO,MAAN,CAAaF;AAApC,aAAD;AADnC;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,cAJF,eAUI,QAAC,KAAD,CAAO,MAAP;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEG,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAwC,UAAA,OAAO,EAAEA,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GA1BQX,Q;;KAAAA,Q;;AA2BT,IAAIY,kBAAkB,GAAEN,QAAD,IAAY;AACjC,SAAO;AACHO,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAClBR,MAAAA,QAAQ,CAACd,QAAQ,CAACsB,OAAD,CAAT,CAAR;AACD,KAHA;AAIHC,IAAAA,UAAU,EAAEC,IAAD,IAAQ;AACjBV,MAAAA,QAAQ,CAACb,SAAS,CAACuB,IAAD,CAAV,CAAR;AACD;AANE,GAAP;AAQD,CATD;;AAWA,IAAIC,eAAe,GAAEC,KAAD,IAAS;AAE3B,SAAM;AACFC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADV,GAAN;AAKD,CAPD;;AASAnB,QAAQ,CAACoB,SAAT,GAAqB;AACnBC,EAAAA,QAAQ,EAAE1B,SAAS,CAAC2B,IADD;AAEnBN,EAAAA,IAAI,EAAErB,SAAS,CAAC4B;AAFG,CAArB;AAIA,MAAMC,cAAc,GAAG9B,OAAO,CAACuB,eAAD,EAAiBL,kBAAjB,CAAP,CAA6CZ,QAA7C,CAAvB;AACA,eAAewB,cAAf","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, InputGroup, FormControl  } from \"react-bootstrap\";\r\n\r\nfunction EditPost() {\r\n  const [modalPost, setModalPost] = useState({});\r\n   \r\n  return (\r\n    <div className=\"cr-up-post\">\r\n          <Form onSubmit={event => {\r\n                event.preventDefault();\r\n                handleFormSubmit(dispatch, modalNote);\r\n            }}>\r\n            <Modal.Body>\r\n                  <InputGroup>\r\n                        <FormControl value={modalNote === null ? '' : modalNote.value}\r\n                            onChange={event => setModalNote({ ...modalNote, value: event.target.value })} />\r\n                  </InputGroup>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                  <Button variant=\"secondary\" onClick={handleClose}>\r\n                      Close\r\n                  </Button>\r\n                  <Button type='submit' variant=\"primary\" onClick={handleClose}>\r\n                        Save\r\n                  </Button>\r\n              </Modal.Footer>\r\n          </Form>\r\n    </div>\r\n  );\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n      addNewPost:(newPost)=>{\r\n          dispatch(new_Post(newPost))\r\n        },\r\n      updatePost:(post)=>{\r\n        dispatch(edit_Post(post))\r\n      },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n\r\n  return{\r\n      posts:state.posts,\r\n\r\n\r\n  }\r\n};\r\n\r\nEditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n}\r\nconst CreateEditPost = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default CreateEditPost;\r\n"]},"metadata":{},"sourceType":"module"}