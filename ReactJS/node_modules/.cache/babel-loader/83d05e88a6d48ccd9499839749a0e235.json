{"ast":null,"code":"import { setUser, setMessage, setUserPost, setUserLoading } from './../redux/User/userActions';\nimport { urlApi } from './post_services';\nimport { push } from 'react-router-redux';\nimport history from 'history';\nexport const fetchUser = userInfo => dispatch => {\n  try {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(userInfo)\n    };\n    fetch(urlApi + `/users/login`, requestOptions).then(res => res.json()).then(data => {\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.currentToken);\n        dispatch(setUser({ ...data.user\n        }));\n        dispatch(push('/usersPosts'));\n        history.push('/usersPosts');\n      } else {\n        dispatch(setMessage(data.error));\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};\nexport const GetUsersPosts = (page, author) => async dispatch => {\n  try {\n    if (!author) return;\n    const requestOptions = {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify({\n        match: {\n          author: author\n        },\n        sort: {},\n        limit: 10,\n        page: page\n      })\n    };\n    debugger;\n    fetch(urlApi + '/post/filterPosts', requestOptions).then(res => res.json()).then(data => {\n      dispatch(setUserPost(data));\n      dispatch(setUserLoading(true));\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    dispatch(setUserLoading(false));\n    console.log('Error!');\n  }\n};\nexport const signUserUp = userInfo => dispatch => {\n  try {\n    fetch(urlApi + `/users/createNewUser`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    }).then(res => res.json()).then(data => {\n      debugger;\n      localStorage.setItem(\"token\", data.currentToken);\n      dispatch(setUser(data.user));\n      dispatch(push('/usersPosts'));\n      history.push('/usersPosts');\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};\nexport const autoLogin = () => dispatch => {\n  try {\n    fetch(`urlApi/auto_login`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => res.json()).then(data => {\n      localStorage.setItem(\"token\", data.currentToken);\n      dispatch(setUser(data));\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/services/user_services.js"],"names":["setUser","setMessage","setUserPost","setUserLoading","urlApi","push","history","fetchUser","userInfo","dispatch","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","data","error","localStorage","setItem","currentToken","user","catch","e","console","log","GetUsersPosts","page","author","mode","match","sort","limit","signUserUp","autoLogin","getItem"],"mappings":"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","sourcesContent":["import {setUser,setMessage,setUserPost,setUserLoading} from './../redux/User/userActions'\r\nimport {urlApi} from './post_services'\r\nimport { push } from 'react-router-redux'\r\nimport history from 'history'\r\nexport const fetchUser = (userInfo) => dispatch => {\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            },\r\n            body: JSON.stringify(userInfo)\r\n        };\r\n        fetch( urlApi+`/users/login`,requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            \r\n            if(!data.error)\r\n            {\r\n                localStorage.setItem(\"token\", data.currentToken);\r\n                dispatch(setUser({...data.user}));\r\n                dispatch(push('/usersPosts'));\r\n                history.push('/usersPosts');\r\n            }\r\n            else{\r\n                dispatch(setMessage(data.error));\r\n            }\r\n            \r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n        } catch{\r\n        \r\n        console.log('Error!');\r\n    }\r\n}\r\nexport const GetUsersPosts =  (page,author) => async dispatch=>{ \r\n\r\n\r\n    try {\r\n        if(!author)\r\n            return;\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            mode:'cors',\r\n            headers: { \r\n                \"Content-type\": \"application/json; charset=UTF-8\",\r\n            },\r\n            body: JSON.stringify({\r\n                    match:{\r\n                        author:author\r\n                    },\r\n                    sort:{},\r\n                    limit: 10,\r\n                    page: page\r\n                })\r\n        };\r\n        debugger;\r\n        fetch(urlApi+'/post/filterPosts', requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(setUserPost(data));\r\n                dispatch(setUserLoading(true));\r\n            })\r\n            .catch((e)=>{\r\n                console.log(e);\r\n            });\r\n        } catch{\r\n            dispatch(setUserLoading(false));\r\n            console.log('Error!');\r\n        }\r\n    }\r\n\r\nexport const signUserUp = (userInfo) => dispatch => {\r\n    try {\r\n        fetch(urlApi+`/users/createNewUser`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(userInfo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        \r\n            debugger;\r\n            localStorage.setItem(\"token\", data.currentToken);\r\n            dispatch(setUser(data.user));\r\n            dispatch(push('/usersPosts'));\r\n            history.push('/usersPosts');\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n    } catch{\r\n            \r\n        console.log('Error!');\r\n    }\r\n}\r\n\r\nexport const autoLogin = () => dispatch => {\r\n    try {\r\n        fetch(`urlApi/auto_login`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            \r\n            localStorage.setItem(\"token\", data.currentToken)\r\n            dispatch(setUser(data))\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n    } catch{\r\n            \r\n        console.log('Error!');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}