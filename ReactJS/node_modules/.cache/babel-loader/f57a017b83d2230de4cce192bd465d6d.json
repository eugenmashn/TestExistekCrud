{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\User\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './Auth.css';\nimport { connect } from 'react-redux';\nimport { updateUser } from '../../services/user_services';\n\nconst SettingComp = props => {\n  _s();\n\n  var _props$user$name, _props$user, _props$user$phone, _props$user2;\n\n  const [userInfo, setUserInfo] = useState({\n    name: (_props$user$name = (_props$user = props.user) === null || _props$user === void 0 ? void 0 : _props$user.name) !== null && _props$user$name !== void 0 ? _props$user$name : '',\n    phone: (_props$user$phone = (_props$user2 = props.user) === null || _props$user2 === void 0 ? void 0 : _props$user2.phone) !== null && _props$user$phone !== void 0 ? _props$user$phone : ''\n  });\n\n  const saveChanges = () => {\n    props.updateUser(userInfo);\n  };\n\n  const handleOnChange = e => {\n    e.persist();\n    setUserInfo(prefState => ({ ...prefState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"setting-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          id: \"form-subcomponent-shorthand-input-first-name\",\n          label: \"\\u0406\\u043C`\\u044F\",\n          onChange: handleOnChange,\n          value: !userInfo ? \"\" : userInfo.name,\n          name: \"name\",\n          placeholder: \"\\u0406\\u043C`\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          id: \"form-subcomponent-shorthand-input-last-name\",\n          label: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          onChange: handleOnChange,\n          value: !userInfo ? \"\" : userInfo.phone,\n          name: \"phone\",\n          placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: saveChanges,\n          children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SettingComp, \"W5+ioIxl/zju1yo+OM/KeLCIVRQ=\");\n\n_c = SettingComp;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    updateUser: userInfo => {\n      dispatch(updateUser(userInfo));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst Setting = connect(mapStateToProps, mapDispatchToProps)(SettingComp);\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingComp\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/User/Settings.js"],"names":["React","useEffect","useState","Form","Button","connect","updateUser","SettingComp","props","userInfo","setUserInfo","name","user","phone","saveChanges","handleOnChange","e","persist","prefState","target","value","mapDispatchToProps","dispatch","mapStateToProps","state","Setting"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACrCS,IAAAA,IAAI,qCAACH,KAAK,CAACI,IAAP,gDAAC,YAAYD,IAAb,+DAAmB,EADc;AAErCE,IAAAA,KAAK,uCAACL,KAAK,CAACI,IAAP,iDAAC,aAAYC,KAAb,iEAAoB;AAFY,GAAD,CAAxC;;AAKA,QAAMC,WAAW,GAAG,MAAI;AACpBN,IAAAA,KAAK,CAACF,UAAN,CAAiBG,QAAjB;AACH,GAFD;;AAGA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,OAAF;AACAP,IAAAA,WAAW,CAAEQ,SAAD,KAAgB,EACxB,GAAGA,SADqB;AAExB,OAACF,CAAC,CAACG,MAAF,CAASR,IAAV,GAAiBK,CAAC,CAACG,MAAF,CAASC;AAFF,KAAhB,CAAD,CAAX;AAIH,GAND;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC,OAAnB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,EAAE,EAAC,8CAArB;AAAoE,UAAA,KAAK,EAAC,qBAA1E;AAAiF,UAAA,QAAQ,EAAEL,cAA3F;AAA2G,UAAA,KAAK,EAAK,CAACN,QAAD,GAAY,EAAZ,GAAiBA,QAAQ,CAACE,IAA/I;AAAqJ,UAAA,IAAI,EAAE,MAA3J;AAAkK,UAAA,WAAW,EAAC;AAA9K;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,EAAE,EAAC,6CAArB;AAAkE,UAAA,KAAK,EAAC,4CAAxE;AAAkF,UAAA,QAAQ,EAAEI,cAA5F;AAA4G,UAAA,KAAK,EAAK,CAACN,QAAD,GAAY,EAAZ,GAAiBA,QAAQ,CAACI,KAAhJ;AAAuJ,UAAA,IAAI,EAAE,OAA7J;AAAqK,UAAA,WAAW,EAAC;AAAjL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAG,gBAAjB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7BD;;GAAMP,W;;KAAAA,W;;AA+BN,IAAIc,kBAAkB,GAAEC,QAAD,IAAY;AAC/B,SAAO;AACHhB,IAAAA,UAAU,EAAEG,QAAD,IAAY;AAEpBa,MAAAA,QAAQ,CAAChB,UAAU,CAACG,QAAD,CAAX,CAAR;AACF;AAJE,GAAP;AAMH,CAPD;;AASA,IAAIc,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAM;AACJZ,IAAAA,IAAI,EAAGY,KAAK,CAACZ,IAAN,CAAWA;AADd,GAAN;AAGD,CAJD;;AAKA,MAAMa,OAAO,GAAGpB,OAAO,CAACkB,eAAD,EAAiBF,kBAAjB,CAAP,CAA6Cd,WAA7C,CAAhB;AAEA,eAAekB,OAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport './Auth.css'\r\nimport { connect } from 'react-redux';\r\nimport {updateUser} from '../../services/user_services'\r\n\r\nconst SettingComp = (props) =>{\r\n    const [userInfo, setUserInfo] = useState({\r\n        name:props.user?.name??'',\r\n        phone:props.user?.phone??''\r\n    });\r\n\r\n    const saveChanges = ()=>{\r\n        props.updateUser(userInfo);\r\n    }\r\n    const handleOnChange = (e) => {\r\n        e.persist();\r\n        setUserInfo((prefState) => ({\r\n            ...prefState,\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    } \r\n    return (\r\n        <div>\r\n            <Form className='setting-form'>\r\n                <Form.Group widths='equal'>\r\n                    <Form.Input fluid id='form-subcomponent-shorthand-input-first-name' label='Ім`я' onChange={handleOnChange} value = { !userInfo?  \"\" : userInfo.name} name ='name' placeholder='Ім`я' />\r\n                    <Form.Input fluid id='form-subcomponent-shorthand-input-last-name'label='Телефон' onChange={handleOnChange} value = { !userInfo?  \"\" : userInfo.phone} name ='phone' placeholder='Телефон'/>\r\n                </Form.Group>\r\n                <div className = 'setting-button' >\r\n                    <Button onClick={saveChanges}>Зберегти</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        updateUser:(userInfo)=>{\r\n          \r\n           dispatch(updateUser(userInfo))\r\n        }\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return{\r\n    user : state.user.user,\r\n  }\r\n};\r\nconst Setting = connect(mapStateToProps,mapDispatchToProps) (SettingComp);\r\n\r\nexport default Setting;"]},"metadata":{},"sourceType":"module"}