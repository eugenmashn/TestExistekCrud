{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\FormPost.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Posts.css';\nimport { Button, Form } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\nexport const FormPost = ({\n  modalPost,\n  setModalPost,\n  SubmitPostForm\n}) => {\n  const inputGroupChangeHandler = event => {\n    setModalPost(prevState => ({ ...prevState,\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    size: \"huge\",\n    className: \"cr-up-form\",\n    onSubmit: event => {\n      console.log('submit');\n      event.preventDefault();\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: 2,\n      className: \"form-cr-up-post\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\",\n        type: \"text\",\n        id: \"header\",\n        width: 8,\n        name: \"header\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u041C\\u0456\\u0441\\u0446\\u0435 \\u0437\\u043D\\u0430\\u0445\\u043E\\u0434\\u0436\\u0435\\u043D\\u043D\\u044F\",\n        type: \"text\",\n        id: \"location\",\n        width: 8,\n        name: \"location\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        label: \"\\u0421\\u0438\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n        type: \"text\",\n        id: \"UrlImg\",\n        width: 6,\n        name: \"UrlImg\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.TextArea, {\n        label: \"\\u041E\\u043F\\u0438\\u0441\",\n        type: \"text\",\n        id: \"description\",\n        width: 10,\n        name: \"description\",\n        value: modalPost === null ? '' : modalPost.value,\n        onChange: event => inputGroupChangeHandler(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cr-up-submit-button\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        as: Link,\n        to: \"/\",\n        type: \"submit\",\n        onClick: SubmitPostForm,\n        variant: \"primary\",\n        children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n_c = FormPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/FormPost.js"],"names":["React","useState","useEffect","Button","Form","Link","FormPost","modalPost","setModalPost","SubmitPostForm","inputGroupChangeHandler","event","prevState","target","id","value","console","log","preventDefault"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState , useEffect } from 'react';\r\nimport './Posts.css';\r\nimport {\r\n  Button,\r\n\r\n  Form,\r\n\r\n} from 'semantic-ui-react'\r\n\r\nimport {Link}  from \"react-router-dom\";\r\n\r\n\r\nexport const FormPost  = ({modalPost,setModalPost,SubmitPostForm})=>{\r\n    \r\n  \r\n  \r\n  const inputGroupChangeHandler = (event) => {\r\n  setModalPost((prevState) => ({\r\n  ...prevState,\r\n  [event.target.id]: event.target.value\r\n  }));\r\n  }\r\n  return (\r\n  <Form size='huge' className='cr-up-form' onSubmit={event => {\r\n    console.log('submit');\r\n    event.preventDefault();\r\n    }}>\r\n\r\n    <Form.Group  widths={2} className='form-cr-up-post'>\r\n      <Form.Input label='Назва'  type=\"text\" id='header' width={8}\r\n           name=\"header\"value={modalPost === null ? '' : modalPost.value}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      <Form.Input label='Місце знаходження'  type=\"text\" id='location' width={8}\r\n        name=\"location\"value={modalPost === null ? '' : modalPost.value}\r\n      onChange={event => inputGroupChangeHandler( event)}/>\r\n       </Form.Group>\r\n      <Form.Group>\r\n      <Form.Input  label='Силка на фото'  type=\"text\" id='UrlImg' width={6}\r\n           name=\"UrlImg\"value={modalPost === null ? '' : modalPost.value}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      </Form.Group>\r\n      <Form.Group>\r\n      <Form.TextArea label='Опис'  type=\"text\" id='description' width={10}\r\n           name=\"description\" value={modalPost === null ? '' : modalPost.value}\r\n          onChange={event => inputGroupChangeHandler( event)}/>\r\n      \r\n    </Form.Group>\r\n      <div className = 'cr-up-submit-button'>\r\n        <Button as={Link} to=\"/\" type='submit' onClick={SubmitPostForm} variant=\"primary\"   >\r\n        Зберегти\r\n        </Button>\r\n      </div>\r\n    \r\n  </Form>\r\n    );\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}