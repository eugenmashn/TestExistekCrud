{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\EditPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction EditPost(props) {\n  _s();\n\n  const [modalPost, setModalPost] = useState({\n    Name: '',\n    Description: '',\n    UrlImg: ''\n  });\n\n  const inputGroupChangeHandler = event => {\n    setModalPost(prevState => ({ ...prevState,\n      [event.target.id]: event.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cr-up-post\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"cr-up-form\",\n      onSubmit: event => {\n        event.preventDefault();\n        props.handleFormSubmit(modalPost);\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Name\",\n            children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"Name\",\n            value: modalPost === null ? '' : modalPost.value,\n            onChange: event => inputGroupChangeHandler(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Description\",\n            children: \"  \\u041E\\u043F\\u0438\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"Description\",\n            value: modalPost === null ? '' : modalPost.value,\n            onChange: event => inputGroupChangeHandler(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"UrlImg\",\n            children: \"  \\u0421\\u0438\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"UrlImg\",\n            value: modalPost === null ? '' : modalPost.value,\n            onChange: event => inputGroupChangeHandler(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: \"/addPosts\",\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPost, \"ep+2r9hNqJvPGJfaKeTkWyJwrSE=\");\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nEditPost.propTypes = {\n  editMode: PropTypes.bool,\n  post: PropTypes.object\n};\nconst CreateEditPost = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default CreateEditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/EditPost.js"],"names":["React","useState","new_Post","edit_Post","connect","PropTypes","Form","Button","InputGroup","FormControl","Link","EditPost","props","modalPost","setModalPost","Name","Description","UrlImg","inputGroupChangeHandler","event","prevState","target","id","value","preventDefault","handleFormSubmit","mapDispatchToProps","dispatch","addNewPost","newPost","updatePost","post","mapStateToProps","state","posts","propTypes","editMode","bool","object","CreateEditPost"],"mappings":"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","sourcesContent":["  \r\nimport React, { useState } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, InputGroup, FormControl  } from \"react-bootstrap\";\r\nimport {Link}  from \"react-router-dom\";\r\n\r\nfunction EditPost(props) {\r\n  const [modalPost, setModalPost] = useState({\r\n                                    Name:'',\r\n                                    Description:'',\r\n                                    UrlImg:''\r\n                                  });\r\n  const inputGroupChangeHandler = (event) => {\r\n        setModalPost((prevState) => ({\r\n        ...prevState,\r\n        [event.target.id]: event.target.value\r\n    }));\r\n}\r\n  return (\r\n    <div className=\"cr-up-post\">\r\n      <Form className='cr-up-form' onSubmit={event => {\r\n            event.preventDefault();\r\n            props.handleFormSubmit(modalPost);\r\n        }}>\r\n        <InputGroup>\r\n        <div>   \r\n          <label htmlFor=\"Name\">Назва</label>\r\n          <FormControl id='Name' value={modalPost === null ? '' : modalPost.value}\r\n          onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"Description\">  Опис</label>\r\n          <FormControl id='Description' value={modalPost === null ? '' : modalPost.value}\r\n          onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n        \r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"UrlImg\">  Силка на фото</label>\r\n            \r\n              <FormControl id='UrlImg' value={modalPost === null ? '' : modalPost.value}\r\n              onChange={event => inputGroupChangeHandler( event.target.value)} />\r\n        </div>\r\n          </InputGroup>\r\n        \r\n        <div>\r\n          <Button as={Link} to=\"/addPosts\" type='submit' variant=\"primary\"   >\r\n                Save\r\n          </Button>\r\n        </div>\r\n          </Form>\r\n    </div>\r\n  );\r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n  return {\r\n      addNewPost:(newPost)=>{\r\n          dispatch(new_Post(newPost))\r\n        },\r\n      updatePost:(post)=>{\r\n        dispatch(edit_Post(post))\r\n      },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n\r\n  return{\r\n      posts:state.posts,\r\n\r\n\r\n  }\r\n};\r\n\r\nEditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n}\r\nconst CreateEditPost = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default CreateEditPost;\r\n"]},"metadata":{},"sourceType":"module"}