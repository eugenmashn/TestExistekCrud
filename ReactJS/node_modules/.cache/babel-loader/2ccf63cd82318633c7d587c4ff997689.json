{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\ClientAppBBB\\\\clientapp\\\\src\\\\components\\\\Posts\\\\UpdatePostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Posts.css';\nimport { new_Post, edit_Post } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FormPost from './FormPost';\nimport { Link } from \"react-router-dom\";\nimport { GetPost } from '../../services/post_services';\n\nfunction EditPost(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  let post = props.post;\n  let id = props.match.params.id;\n  useEffect(() => {\n    GetPost(dispatch, id);\n  }, []);\n  const [modalPost, setModalPost] = useState({\n    _id: '',\n    header: '',\n    description: '',\n    UrlImg: '',\n    location: '',\n    dateCreated: '',\n    viewCount: 0,\n    tags: []\n  });\n\n  const SubmitPostFormUpdate = () => {\n    if (modalPost.Name !== '') {\n      props.updatePost(modalPost);\n    } else {\n      console.log('error');\n    }\n  };\n\n  post = useSelector(state => state.posts.posts.find(i => i._id === id));\n  debugger;\n\n  if (props.match.params.id && post) {}\n\n  debugger;\n  return /*#__PURE__*/_jsxDEV(FormPost, {\n    modalPost: modalPost,\n    setModalPost: setModalPost,\n    SubmitPostForm: SubmitPostFormUpdate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n\n_s(EditPost, \"BfcRw7jVSwYkxALC5HFQRJRkjSU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditPost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\n{\n  /*\r\n  EditPost.propTypes = {\r\n  editMode: PropTypes.bool,\r\n  post: PropTypes.object\r\n  };*/\n}\nconst EditPostComp = connect(mapStateToProps, mapDispatchToProps)(EditPost);\nexport default EditPostComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/Source/ClientAppBBB/clientapp/src/components/Posts/UpdatePostForm.js"],"names":["React","useState","useEffect","new_Post","edit_Post","connect","PropTypes","useSelector","useDispatch","FormPost","Link","GetPost","EditPost","props","dispatch","post","id","match","params","modalPost","setModalPost","_id","header","description","UrlImg","location","dateCreated","viewCount","tags","SubmitPostFormUpdate","Name","updatePost","console","log","state","posts","find","i","mapDispatchToProps","addNewPost","newPost","mapStateToProps","EditPostComp"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,aAAP;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,qBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,IAAI,GAAGF,KAAK,CAACE,IAAjB;AACA,MAAIC,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B;AACEd,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACG,QAAD,EAAUE,EAAV,CAAP;AACC,GAFI,EAEF,EAFE,CAAT;AAIF,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC;AACToB,IAAAA,GAAG,EAAC,EADK;AAETC,IAAAA,MAAM,EAAC,EAFE;AAGTC,IAAAA,WAAW,EAAC,EAHH;AAITC,IAAAA,MAAM,EAAC,EAJE;AAKTC,IAAAA,QAAQ,EAAC,EALA;AAMTC,IAAAA,WAAW,EAAC,EANH;AAOTC,IAAAA,SAAS,EAAC,CAPD;AAQTC,IAAAA,IAAI,EAAC;AARI,GAAD,CAA1C;;AAYA,QAAMC,oBAAoB,GAAG,MAAM;AAEjC,QAAGV,SAAS,CAACW,IAAV,KAAmB,EAAtB,EAAyB;AACvBjB,MAAAA,KAAK,CAACkB,UAAN,CAAiBZ,SAAjB;AACD,KAFD,MAGI;AACFa,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAEF,GATD;;AAUAlB,EAAAA,IAAI,GAACR,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,IAAlB,CAAuBC,CAAC,IAAIA,CAAC,CAAChB,GAAF,KAAUL,EAAtC,CAAV,CAAhB;AAEA;;AACA,MAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAAnB,IAAyBD,IAA5B,EACA,CAEC;;AAEC;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAEI,SAArB;AAAgC,IAAA,YAAY,EAAEC,YAA9C;AAA4D,IAAA,cAAc,EAAIS;AAA9E;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GA3CQjB,Q;UACUJ,W,EA6BZD,W;;;KA9BEK,Q;;AA4CT,IAAI0B,kBAAkB,GAAExB,QAAD,IAAY;AAC/B,SAAO;AACHyB,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAElB1B,MAAAA,QAAQ,CAACX,QAAQ,CAACqC,OAAD,CAAT,CAAR;AACD,KAJA;AAKHT,IAAAA,UAAU,EAAEhB,IAAD,IAAQ;AACjBD,MAAAA,QAAQ,CAACV,SAAS,CAACW,IAAD,CAAV,CAAR;AACD;AAPE,GAAP;AASH,CAVD;;AAYA,IAAI0B,eAAe,GAAEP,KAAD,IAAS;AAC7B,SAAM;AACFC,IAAAA,KAAK,EAACD,KAAK,CAACC;AADV,GAAN;AAGC,CAJD;;AAKA;AAAC;AACD;AACA;AACA;AACA;AAAK;AAIL,MAAMO,YAAY,GAAGrC,OAAO,CAACoC,eAAD,EAAiBH,kBAAjB,CAAP,CAA6C1B,QAA7C,CAArB;AACA,eAAe8B,YAAf","sourcesContent":["  \r\nimport React, { useState , useEffect } from 'react';\r\nimport './Posts.css';\r\nimport {new_Post,edit_Post} from '../../redux/actions'\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport FormPost from './FormPost'\r\nimport {Link}  from \"react-router-dom\";\r\nimport { GetPost } from '../../services/post_services';\r\n\r\nfunction EditPost(props) {\r\n  const dispatch = useDispatch();\r\n  let post = props.post; \r\n  let id = props.match.params.id;\r\n    useEffect(() => {\r\n        GetPost(dispatch,id);\r\n        }, []);\r\n        \r\n  const [modalPost, setModalPost] = useState({\r\n                                    _id:'',\r\n                                    header:'',\r\n                                    description:'',\r\n                                    UrlImg:'',\r\n                                    location:'',\r\n                                    dateCreated:'',\r\n                                    viewCount:0,\r\n                                    tags:[],\r\n                                  });\r\n  \r\n\r\n  const SubmitPostFormUpdate = () => {\r\n    \r\n    if(modalPost.Name !== ''){\r\n      props.updatePost(modalPost);\r\n    }\r\n    else{\r\n      console.log('error');\r\n    }\r\n       \r\n  }\r\n  post=useSelector(state => state.posts.posts.find(i => i._id === id));\r\n\r\n  debugger;\r\n  if(props.match.params.id && post)\r\n  {\r\n\r\n  }\r\n    \r\n    debugger;\r\n   \r\n    return <FormPost modalPost={modalPost} setModalPost={setModalPost} SubmitPostForm = {SubmitPostFormUpdate}/>\r\n  \r\n  \r\n}\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addNewPost:(newPost)=>{\r\n          \r\n            dispatch(new_Post(newPost))\r\n          },\r\n        updatePost:(post)=>{\r\n          dispatch(edit_Post(post))\r\n        },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\nreturn{\r\n    posts:state.posts,\r\n}\r\n};\r\n{/*\r\nEditPost.propTypes = {\r\neditMode: PropTypes.bool,\r\npost: PropTypes.object\r\n};*/}\r\n\r\n\r\n\r\nconst EditPostComp = connect(mapStateToProps,mapDispatchToProps) (EditPost);\r\nexport default EditPostComp;"]},"metadata":{},"sourceType":"module"}