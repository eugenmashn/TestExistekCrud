{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\Main\\\\PrivateRouting.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({\n  component: Component,\n  authed,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authed === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/Main/PrivateRouting.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","authed","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,QAA6B,kBAA7B;;AACC,MAAOC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,MAAvB;AAA+B,KAAGC;AAAlC,CAAD,KAA6C;AAChE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAWF,MAAM,KAAK,IAAX,gBACf,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADe,gBAEf,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATF;;KAAOT,Y;AAUL,eAAeA,YAAf","sourcesContent":["import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom'\r\n const  PrivateRoute = ({component: Component, authed, ...rest}) => {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => authed === true\r\n          ? <Component {...props} />\r\n          : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\r\n      />\r\n    )\r\n  }\r\n   export default PrivateRoute;"]},"metadata":{},"sourceType":"module"}