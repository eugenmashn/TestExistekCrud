{"ast":null,"code":"import { setUser } from './../redux/User/userActions';\nimport { urlApi } from './post_services';\nexport const fetchUser = userInfo => dispatch => {\n  try {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      },\n      body: JSON.stringify(userInfo)\n    };\n    fetch(urlApi + `/users/login`, requestOptions).then(res => res.json()).then(data => {\n      debugger;\n\n      if (!data.error) {\n        localStorage.setItem(\"token\", data.currentToken);\n        dispatch(setUser(data));\n      }\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};\nexport const signUserUp = userInfo => dispatch => {\n  try {\n    fetch(urlApi + `/users/createNewUser`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify(userInfo)\n    }).then(res => res.json()).then(data => {\n      debugger;\n      localStorage.setItem(\"token\", data.currentToken);\n      dispatch(setUser(data.user));\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};\nexport const autoLogin = () => dispatch => {\n  try {\n    fetch(`urlApi/auto_login`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    }).then(res => res.json()).then(data => {\n      localStorage.setItem(\"token\", data.currentToken);\n      dispatch(setUser(data));\n    }).catch(e => {\n      console.log(e);\n    });\n  } catch {\n    console.log('Error!');\n  }\n};","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/services/user_services.js"],"names":["setUser","urlApi","fetchUser","userInfo","dispatch","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","data","error","localStorage","setItem","currentToken","catch","e","console","log","signUserUp","user","autoLogin","getItem"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,6BAAtB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AAC/C,MAAI;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFU;AAKnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AALa,KAAvB;AAOAQ,IAAAA,KAAK,CAAEV,MAAM,GAAE,cAAV,EAAwBI,cAAxB,CAAL,CACCO,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;AACV;;AACA,UAAG,CAACA,IAAI,CAACC,KAAT,EACA;AACIC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,YAAnC;AACAf,QAAAA,QAAQ,CAACJ,OAAO,CAACe,IAAD,CAAR,CAAR;AACH;AAEJ,KAVD,EAWCK,KAXD,CAWQC,CAAD,IAAK;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAbD;AAcC,GAtBL,CAsBM,MAAK;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,CA3BM;AA6BP,OAAO,MAAMC,UAAU,GAAIrB,QAAD,IAAcC,QAAQ,IAAI;AAChD,MAAI;AACAO,IAAAA,KAAK,CAACV,MAAM,GAAE,sBAAT,EAAgC;AACjCK,MAAAA,MAAM,EAAE,KADyB;AAEjCC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL,OAFwB;AAMjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAN2B,KAAhC,CAAL,CAQCS,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASMG,IAAI,IAAI;AAEV;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,YAAnC;AACAf,MAAAA,QAAQ,CAACJ,OAAO,CAACe,IAAI,CAACU,IAAN,CAAR,CAAR;AACH,KAdD,EAeCL,KAfD,CAeQC,CAAD,IAAK;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAjBD;AAkBH,GAnBD,CAmBE,MAAK;AAEHC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,CAxBM;AA0BP,OAAO,MAAMG,SAAS,GAAG,MAAMtB,QAAQ,IAAI;AACvC,MAAI;AACAO,IAAAA,KAAK,CAAE,mBAAF,EAAsB;AACvBJ,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU,kBAFL;AAGL,yBAAkB,UAASU,YAAY,CAACU,OAAb,CAAqB,OAArB,CAA8B;AAHpD;AADc,KAAtB,CAAL,CAOCf,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,IAAI,IAAI;AAEVE,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,YAAnC;AACAf,MAAAA,QAAQ,CAACJ,OAAO,CAACe,IAAD,CAAR,CAAR;AACH,KAZD,EAaCK,KAbD,CAaQC,CAAD,IAAK;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,KAfD;AAgBH,GAjBD,CAiBE,MAAK;AAEHC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;AACJ,CAtBM","sourcesContent":["import {setUser} from './../redux/User/userActions'\r\nimport {urlApi} from './post_services'\r\nexport const fetchUser = (userInfo) => dispatch => {\r\n    try {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            },\r\n            body: JSON.stringify(userInfo)\r\n        };\r\n        fetch( urlApi+`/users/login`,requestOptions)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            debugger;\r\n            if(!data.error)\r\n            {\r\n                localStorage.setItem(\"token\", data.currentToken)\r\n                dispatch(setUser(data))\r\n            }\r\n            \r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n        } catch{\r\n        \r\n        console.log('Error!');\r\n    }\r\n}\r\n\r\nexport const signUserUp = (userInfo) => dispatch => {\r\n    try {\r\n        fetch(urlApi+`/users/createNewUser`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(userInfo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n        \r\n            debugger;\r\n            localStorage.setItem(\"token\", data.currentToken)\r\n            dispatch(setUser(data.user))\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n    } catch{\r\n            \r\n        console.log('Error!');\r\n    }\r\n}\r\n\r\nexport const autoLogin = () => dispatch => {\r\n    try {\r\n        fetch(`urlApi/auto_login`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            \r\n            localStorage.setItem(\"token\", data.currentToken)\r\n            dispatch(setUser(data))\r\n        })\r\n        .catch((e)=>{\r\n            console.log(e);\r\n        });\r\n    } catch{\r\n            \r\n        console.log('Error!');\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}