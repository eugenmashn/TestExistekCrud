{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\User\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport './Auth.css';\nimport { connect } from 'react-redux';\n\nconst SettingComp = props => {\n  _s();\n\n  console.log(props.user);\n  const [userInfo, setUserInfo] = useState({\n    name: \"\",\n    phone: \"\"\n  });\n  useEffect(() => {\n    setUserInfo(props.user);\n  }, [props.user]);\n\n  const handleOnChange = e => {\n    e.persist();\n    setUserInfo(prefState => ({ ...prefState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"setting-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: \"equal\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          id: \"form-subcomponent-shorthand-input-first-name\",\n          label: \"\\u0406\\u043C`\\u044F\",\n          onChange: handleOnChange,\n          value: !userInfo ? \"\" : userInfo.name,\n          name: \"name\",\n          placeholder: \"\\u0406\\u043C`\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          id: \"form-subcomponent-shorthand-input-last-name\",\n          label: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\",\n          onChange: handleOnChange,\n          value: !userInfo ? \"\" : userInfo.phone,\n          name: \"phone\",\n          placeholder: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"setting-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SettingComp, \"+srm8GjNH6+3u1XogoSqqtspwvw=\");\n\n_c = SettingComp;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      /* dispatch(new_Post(newPost))*/\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    user: state.user.user\n  };\n};\n\nconst Setting = connect(mapStateToProps, mapDispatchToProps)(SettingComp);\nexport default Setting;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingComp\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/User/Settings.js"],"names":["React","useEffect","useState","Form","Button","connect","SettingComp","props","console","log","user","userInfo","setUserInfo","name","phone","handleOnChange","e","persist","prefState","target","value","mapDispatchToProps","dispatch","addNewPost","newPost","mapStateToProps","state","Setting"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAU;AAAA;;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACrCW,IAAAA,IAAI,EAAC,EADgC;AAErCC,IAAAA,KAAK,EAAC;AAF+B,GAAD,CAAxC;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,CAACL,KAAK,CAACG,IAAP,CAAX;AACH,GAFQ,EAEN,CAACH,KAAK,CAACG,IAAP,CAFM,CAAT;;AAIA,QAAMK,cAAc,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,OAAF;AACAL,IAAAA,WAAW,CAAEM,SAAD,KAAgB,EACxB,GAAGA,SADqB;AAExB,OAACF,CAAC,CAACG,MAAF,CAASN,IAAV,GAAiBG,CAAC,CAACG,MAAF,CAASC;AAFF,KAAhB,CAAD,CAAX;AAIH,GAND;;AAOA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,MAAM,EAAC,OAAnB;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,EAAE,EAAC,8CAArB;AAAoE,UAAA,KAAK,EAAC,qBAA1E;AAAiF,UAAA,QAAQ,EAAEL,cAA3F;AAA2G,UAAA,KAAK,EAAK,CAACJ,QAAD,GAAY,EAAZ,GAAiBA,QAAQ,CAACE,IAA/I;AAAqJ,UAAA,IAAI,EAAE,MAA3J;AAAkK,UAAA,WAAW,EAAC;AAA9K;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,KAAK,MAAjB;AAAkB,UAAA,EAAE,EAAC,6CAArB;AAAkE,UAAA,KAAK,EAAC,4CAAxE;AAAkF,UAAA,QAAQ,EAAEE,cAA5F;AAA4G,UAAA,KAAK,EAAK,CAACJ,QAAD,GAAY,EAAZ,GAAiBA,QAAQ,CAACG,KAAhJ;AAAuJ,UAAA,IAAI,EAAE,OAA7J;AAAqK,UAAA,WAAW,EAAC;AAAjL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAG,gBAAjB;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9BD;;GAAMR,W;;KAAAA,W;;AAgCN,IAAIe,kBAAkB,GAAEC,QAAD,IAAY;AAC/B,SAAO;AACHC,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAEnB;AACF;AAJE,GAAP;AAMH,CAPD;;AASA,IAAIC,eAAe,GAAEC,KAAD,IAAS;AAC3B,SAAM;AACJhB,IAAAA,IAAI,EAAGgB,KAAK,CAAChB,IAAN,CAAWA;AADd,GAAN;AAGD,CAJD;;AAKA,MAAMiB,OAAO,GAAGtB,OAAO,CAACoB,eAAD,EAAiBJ,kBAAjB,CAAP,CAA6Cf,WAA7C,CAAhB;AAEA,eAAeqB,OAAf","sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport './Auth.css'\r\nimport { connect } from 'react-redux';\r\n\r\nconst SettingComp = (props) =>{\r\n    console.log(props.user)\r\n    const [userInfo, setUserInfo] = useState({\r\n        name:\"\",\r\n        phone:\"\"\r\n    });\r\n    useEffect(() => {\r\n        setUserInfo(props.user);\r\n    }, [props.user]);\r\n\r\n    const handleOnChange = (e) => {\r\n        e.persist();\r\n        setUserInfo((prefState) => ({\r\n            ...prefState,\r\n            [e.target.name]: e.target.value \r\n        }))\r\n    } \r\n    return (\r\n        <div>\r\n            <Form className='setting-form'>\r\n                <Form.Group widths='equal'>\r\n                    <Form.Input fluid id='form-subcomponent-shorthand-input-first-name' label='Ім`я' onChange={handleOnChange} value = { !userInfo?  \"\" : userInfo.name} name ='name' placeholder='Ім`я' />\r\n                    <Form.Input fluid id='form-subcomponent-shorthand-input-last-name'label='Телефон' onChange={handleOnChange} value = { !userInfo?  \"\" : userInfo.phone} name ='phone' placeholder='Телефон'/>\r\n                </Form.Group>\r\n                <div className = 'setting-button' >\r\n                    <Button>Зберегти</Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addNewPost:(newPost)=>{\r\n          \r\n           /* dispatch(new_Post(newPost))*/\r\n        }\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n  return{\r\n    user : state.user.user,\r\n  }\r\n};\r\nconst Setting = connect(mapStateToProps,mapDispatchToProps) (SettingComp);\r\n\r\nexport default Setting;"]},"metadata":{},"sourceType":"module"}