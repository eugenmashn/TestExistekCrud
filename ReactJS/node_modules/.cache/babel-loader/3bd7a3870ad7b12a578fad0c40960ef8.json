{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\Project\\\\ReactJS\\\\src\\\\components\\\\Posts\\\\CreatePostForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { new_Post, edit_Post } from '../../redux/Post/actionsPost';\nimport { connect } from 'react-redux';\nimport FormPost from './FormPost';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { NewPost } from '../../services/post_services';\n\nconst CreatePost = function (props) {\n  _s();\n\n  const author = useSelector(state => state.user.user.email);\n  const dispatch = useDispatch();\n\n  const SubmitPostFormCreate = modalPost => {\n    if (modalPost.Name !== '') {\n      debugger;\n      dispatch(NewPost(modalPost, author));\n    } else {\n      console.log('error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormPost, {\n    Post: null,\n    SubmitPostForm: SubmitPostFormCreate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CreatePost, \"G6TAbrTvKOOvY+EoRHXna3UuLrI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreatePost;\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addNewPost: newPost => {\n      dispatch(new_Post(newPost));\n    },\n    updatePost: post => {\n      dispatch(edit_Post(post));\n    }\n  };\n};\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst CreatePostForm = connect(mapStateToProps, mapDispatchToProps)(CreatePost);\nexport default CreatePostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["D:/Source/Project/ReactJS/src/components/Posts/CreatePostForm.js"],"names":["React","new_Post","edit_Post","connect","FormPost","useSelector","useDispatch","NewPost","CreatePost","props","author","state","user","email","dispatch","SubmitPostFormCreate","modalPost","Name","console","log","mapDispatchToProps","addNewPost","newPost","updatePost","post","mapStateToProps","posts","CreatePostForm"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,8BAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAOC,OAAP,QAAqB,8BAArB;;AAEA,MAAMC,UAAU,GAAG,UAAUC,KAAV,EACnB;AAAA;;AACE,QAAMC,MAAM,GAAIL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWA,IAAX,CAAgBC,KAA1B,CAA3B;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,QAAOS,oBAAoB,GAAIC,SAAD,IAAc;AAC1C,QAAGA,SAAS,CAACC,IAAV,KAAmB,EAAtB,EAAyB;AACvB;AACDH,MAAAA,QAAQ,CAACP,OAAO,CAACS,SAAD,EAAWN,MAAX,CAAR,CAAR;AACA,KAHD,MAII;AACFQ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GARD;;AASA,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAE,IAAhB;AAAsB,IAAA,cAAc,EAAIJ;AAAxC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdD;;GAAMP,U;UAEYH,W,EACCC,W;;;KAHbE,U;;AAeJ,IAAIY,kBAAkB,GAAEN,QAAD,IAAY;AACjC,SAAO;AACHO,IAAAA,UAAU,EAAEC,OAAD,IAAW;AAElBR,MAAAA,QAAQ,CAACb,QAAQ,CAACqB,OAAD,CAAT,CAAR;AACD,KAJA;AAKHC,IAAAA,UAAU,EAAEC,IAAD,IAAQ;AACjBV,MAAAA,QAAQ,CAACZ,SAAS,CAACsB,IAAD,CAAV,CAAR;AACD;AAPE,GAAP;AASH,CAVC;;AAYF,IAAIC,eAAe,GAAEd,KAAD,IAAS;AACzB,SAAM;AACFe,IAAAA,KAAK,EAACf,KAAK,CAACe;AADV,GAAN;AAGH,CAJD;;AAYA,MAAMC,cAAc,GAAGxB,OAAO,CAACsB,eAAD,EAAiBL,kBAAjB,CAAP,CAA6CZ,UAA7C,CAAvB;AACA,eAAemB,cAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport {new_Post,edit_Post} from '../../redux/Post/actionsPost'\r\nimport { connect } from 'react-redux';\r\nimport FormPost from './FormPost'\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport{NewPost} from '../../services/post_services'\r\n\r\nconst CreatePost = function (props)\r\n{\r\n  const author =  useSelector(state => state.user.user.email);\r\n  const dispatch = useDispatch();\r\n  const  SubmitPostFormCreate = (modalPost)=> {\r\n    if(modalPost.Name !== ''){\r\n      debugger;\r\n     dispatch(NewPost(modalPost,author));\r\n    }\r\n    else{\r\n      console.log('error');\r\n    }\r\n  }\r\n  return <FormPost Post={null} SubmitPostForm = {SubmitPostFormCreate}/>\r\n}\r\n  let mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addNewPost:(newPost)=>{\r\n          \r\n            dispatch(new_Post(newPost))\r\n          },\r\n        updatePost:(post)=>{\r\n          dispatch(edit_Post(post))\r\n        },\r\n  }\r\n};\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        posts:state.posts,\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst CreatePostForm = connect(mapStateToProps,mapDispatchToProps) (CreatePost);\r\nexport default CreatePostForm;"]},"metadata":{},"sourceType":"module"}