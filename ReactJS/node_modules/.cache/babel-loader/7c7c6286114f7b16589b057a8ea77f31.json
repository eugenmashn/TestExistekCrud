{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Source\\\\TestExistekCrud\\\\ReactJS\\\\src\\\\components\\\\Posts\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { Container, Header, Divider, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport 'moment/locale/ru';\nimport { Card, Image } from 'semantic-ui-react';\nimport { GetPost, DeletePost } from '../../services/post_services';\nimport './Posts.css';\n\nconst ViewPost = function (props) {\n  _s();\n\n  debugger;\n  const dispatch = useDispatch();\n  let post = props.post.find(i => i.postId === props.id);\n  useEffect(() => {\n    if (!post) {\n      dispatch(GetPost(props.id));\n    }\n  }, []);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  const removePost = () => {\n    dispatch(DeletePost(post));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        fluid: true,\n        centered: true,\n        className: \"card-view-element\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: post.imgUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n          extra: true,\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"posts-header\",\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Moment, {\n              date: post.dateCreated,\n              format: \"MMM Do YY\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group-post-view\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              as: Link,\n              to: \"/\",\n              secondary: true,\n              className: \"button-change-post\",\n              onClick: removePost,\n              children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: Link,\n              to: `/changePost/${props.postId}`,\n              secondary: true,\n              className: \"button-change-post\",\n              children: \"\\u0417\\u043C\\u0456\\u043D\\u0438\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, post.postId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ViewPost;\n\nlet mapStateToProps = (state, ownProps) => {\n  debugger;\n  return {\n    id: ownProps.match.params.id,\n    user: state.user,\n    post: state.posts.posts\n  };\n};\n\nconst viewPost = connect(mapStateToProps, null)(ViewPost);\nexport default viewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["D:/Source/TestExistekCrud/ReactJS/src/components/Posts/ViewPost.js"],"names":["React","useEffect","connect","useDispatch","Container","Header","Divider","Button","Link","Moment","Card","Image","GetPost","DeletePost","ViewPost","props","dispatch","post","find","i","postId","id","removePost","imgUrl","description","title","dateCreated","mapStateToProps","state","ownProps","match","params","user","posts","viewPost"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  useDispatch } from 'react-redux';\r\nimport { Container, Header,Divider,Button } from 'semantic-ui-react';\r\nimport {Link} from 'react-router-dom';\r\nimport Moment from 'react-moment'\r\nimport  'moment/locale/ru';\r\nimport { Card, Image } from 'semantic-ui-react'\r\nimport { GetPost,DeletePost } from '../../services/post_services';\r\nimport './Posts.css';\r\n\r\nconst ViewPost = function (props) {\r\n    debugger;\r\n    const dispatch = useDispatch();\r\n   \r\n    let post = props.post.find(i => i.postId === props.id);\r\n    \r\n    useEffect(() => {\r\n        if(!post) {\r\n            dispatch(GetPost(props.id));\r\n        }\r\n    },[]);\r\n    if(!post)\r\n    {\r\n      return<div>loading...</div>  \r\n    }\r\n    const removePost = () =>{\r\n        \r\n        dispatch(DeletePost(post));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"view-post\">\r\n            <div>\r\n            <Card key = {post.postId} fluid centered className='card-view-element' >\r\n                    <Card.Content>\r\n                      <Image src ={post.imgUrl} />\r\n                      <div className ='description'>\r\n                        <p>{post.description}</p>\r\n                      </div>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                      <Card.Header  >\r\n                        <span className='posts-header'>{post.title}</span> \r\n                    </Card.Header>\r\n                    <div>\r\n                      <Moment  date ={post.dateCreated} format =\"MMM Do YY\"> </Moment>\r\n                    </div>\r\n                    <div className='button-group-post-view'>\r\n                        <Button  as={Link} to={\"/\"} secondary className = 'button-change-post' onClick={removePost}>Видалити</Button>\r\n                        <Button  as={Link} to={`/changePost/${props.postId}`} secondary className = 'button-change-post'>Змінити</Button>\r\n                     </div>\r\n                    </Card.Content>\r\n            </Card>\r\n        </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nlet mapStateToProps=(state,ownProps)=>{\r\n    \r\n    debugger;\r\n    return{\r\n        id:ownProps.match.params.id,\r\n        user :state.user,\r\n        post:state.posts.posts\r\n    }\r\n  };\r\n  \r\n\r\n  const viewPost = connect(mapStateToProps,null) (ViewPost);\r\n  export default viewPost;"]},"metadata":{},"sourceType":"module"}